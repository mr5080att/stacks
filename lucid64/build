#!/bin/bash

set -e -x

source ./helpers.sh

base_dir=$(pwd)
assets_dir=$base_dir/assets
rootfs_dir=/tmp/warden/rootfs

function apt_get {
  run_in_chroot $rootfs_dir "apt-get update"
  run_in_chroot $rootfs_dir "apt-get -f -y --force-yes --no-install-recommends $*"
  run_in_chroot $rootfs_dir "apt-get clean"
}

packages="
  bind9-host
  bison
  build-essential
  curl
  dnsutils
  flex
  gdb
  git-core
  imagemagick
  iputils-arping
  libaio1
  libbz2-dev
  libcap2-bin
  libcurl3
  libcurl3-dev
  libmagick9-dev
  libmysqlclient-dev
  libncurses5-dev
  libpq-dev
  libreadline6-dev
  libsqlite-dev
  libsqlite3-dev
  libssl-dev
  libxml2
  libxml2-dev
  libxslt1-dev
  libxslt1.1
  libyaml-dev
  lsof
  openssh-server
  psmisc
  quota
  rsync
  strace
  sysstat
  tcpdump
  traceroute
  unzip
  wget
  zip
"

# setup warden's default rootfs
(
  cd /warden/warden
  bundle install && bundle exec rake setup[config/linux.yml]
)

# source /etc/lsb-release if present
if [ -f $rootfs_dir/etc/lsb-release ]
then
  source $rootfs_dir/etc/lsb-release
fi

# disable interactive dpkg
debconf="debconf debconf/frontend select noninteractive"
run_in_chroot $rootfs_dir "echo ${debconf} | debconf-set-selections"

# networking
cp $assets_dir/etc/hosts $rootfs_dir/etc/hosts

# timezone
cp $assets_dir/etc/timezone $rootfs_dir/etc/timezone
run_in_chroot $rootfs_dir "dpkg-reconfigure -fnoninteractive -pcritical tzdata"

# locale
cp $assets_dir/etc/default/locale $rootfs_dir/etc/default/locale
run_in_chroot $rootfs_dir "
locale-gen en_US.UTF-8
dpkg-reconfigure -fnoninteractive -pcritical libc6
dpkg-reconfigure -fnoninteractive -pcritical locales
"

# firstboot script
cp $assets_dir/etc/rc.local $rootfs_dir/etc/rc.local
cp $assets_dir/root/firstboot.sh $rootfs_dir/root/firstboot.sh
chmod 0755 $rootfs_dir/root/firstboot.sh

# apt sources
cat > $rootfs_dir/etc/apt/sources.list <<EOS
deb http://archive.ubuntu.com/ubuntu $DISTRIB_CODENAME main universe multiverse
deb http://archive.ubuntu.com/ubuntu $DISTRIB_CODENAME-updates main universe multiverse
deb http://security.ubuntu.com/ubuntu $DISTRIB_CODENAME-security main universe multiverse
EOS

# upgrade upstart first to prevent it from messing up our stubs and starting daemons anyway
apt_get install upstart
apt_get dist-upgrade
apt_get install $packages

# install ruby using ruby-build
run_in_chroot $rootfs_dir "
  cd /tmp &&
  git clone git://github.com/sstephenson/ruby-build.git &&
  cd ruby-build &&
  PREFIX=/usr/local ./install.sh &&
  /usr/local/bin/ruby-build 1.9.3-p392 /usr
"

# install postgresql-client-9.3
wget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | sudo apt-key add -
sudo apt-get update
sudo apt-get install postgresql-client-9.3

# package up rootfs
cd $rootfs_dir
tar czf /vagrant/rootfs.tgz *
